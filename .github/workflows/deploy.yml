name: CI-CD Deploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install SSH client
        run: sudo apt-get update && sudo apt-get install -y openssh-client

      - name: Deploy via SSH using password (Docker Compose)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            set -e
            export APP_DIR="${{ secrets.APP_DIR }}"
            export REPO_URL="https://github.com/AleksandrSotnikov/gas-station-ML.git"

            echo ">>> [1/5] Ensure system dependencies"
            apt-get update -y
            apt-get install -y git ca-certificates curl gnupg

            if ! command -v docker >/dev/null 2>&1; then
              install -m 0755 -d /etc/apt/keyrings
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
              chmod a+r /etc/apt/keyrings/docker.gpg
              echo \
                "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
                $(. /etc/os-release && echo $VERSION_CODENAME) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
              apt-get update -y
              apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
            fi

            echo ">>> [2/5] Ensure docker daemon is running"
            (systemctl enable docker || true)
            (systemctl start docker || true)
            (systemctl restart docker || true)
            sleep 3 || true
            if ! docker info >/dev/null 2>&1; then
              echo "Docker daemon not ready; trying service start"
              (service docker start || true)
              sleep 3 || true
              docker info || (journalctl -u docker --no-pager | tail -n 100; exit 1)
            fi

            echo ">>> [3/5] Clone/pull repository in $APP_DIR"
            mkdir -p "$APP_DIR"
            cd "$APP_DIR"
            if [ ! -d repo/.git ]; then
              git clone "$REPO_URL" repo || true
            fi
            cd repo
            git fetch --all --prune
            git checkout main
            git pull --ff-only

            echo ">>> [4/5] Docker Compose up"
            docker compose down || true
            docker compose up --build -d

            echo ">>> [5/5] Health check"
            for i in {1..10}; do
              curl -fsS http://127.0.0.1:8000/health && break || sleep 2
            done
            echo "Service is running"
